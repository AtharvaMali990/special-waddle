{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "cc4f2522-aea4-4e66-8f65-256ffee383fa",
   "metadata": {},
   "source": [
    "site_1=\"Amazon.com\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bdd6aae3-a5db-42ff-8d94-a575acee64f5",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "c8368061-1bd0-4390-a1b1-73d9fcc8ec63",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'site_2' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[11], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[38;5;28mprint\u001b[39m(site_2)\n",
      "\u001b[1;31mNameError\u001b[0m: name 'site_2' is not defined"
     ]
    }
   ],
   "source": [
    "print(site_2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "a649cf33-75ca-479f-bfa4-c9f4cd5fd8ad",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Atharva Mali\n"
     ]
    }
   ],
   "source": [
    "print(\"Atharva Mali\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3c768d6b-1d55-449d-b1ef-e4fbe5ce8ac1",
   "metadata": {},
   "source": [
    "print(5**2) # to find power of 5^2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "916d4161-4134-4a5f-96a5-69baf902e37f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "25\n"
     ]
    }
   ],
   "source": [
    "print(5**2)#to find power of 5^2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "8372951f-85c8-41d1-9e7b-f65200252445",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "15\n"
     ]
    }
   ],
   "source": [
    "print(5+10)# addition of two numbers "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "42090513-b365-405a-8a58-0a470e5600be",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "-5\n"
     ]
    }
   ],
   "source": [
    "print(5-10)#division of two numbers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "d8ac1ce0-1935-4ad5-95f1-0d256a952615",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "50\n",
      "0.5\n"
     ]
    }
   ],
   "source": [
    "print(5*10)\n",
    "print (5/10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "c50503fd-867b-4a7b-b758-40651affa9da",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10\n",
      "10\n",
      "10\n"
     ]
    }
   ],
   "source": [
    "a=b=c=10#assign single value to multiable/different variable\n",
    "print(a)\n",
    "print(b)\n",
    "print(c)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "7eab27f3-e2fb-4f58-8647-016b84fa34a2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "atharva\n",
      "5.2\n"
     ]
    }
   ],
   "source": [
    "e,f,g=1,\"atharva\",5.2\n",
    "print(e)\n",
    "print(f)\n",
    "print(g)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "e0775b84-c337-4b24-98f4-ebaee739afee",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "car\n",
      "orange\n",
      "bus\n"
     ]
    }
   ],
   "source": [
    "x,y,z=\"car\",\"orange\",\"bus\"\n",
    "print(x)\n",
    "print(y)\n",
    "print(z)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "e97a8767-10c5-4b39-9838-b7d2b5c92257",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "audi\n",
      "lamborgini\n",
      "mercidies\n"
     ]
    }
   ],
   "source": [
    "g,h,i=\"audi\",\"lamborgini\",\"mercidies\"\n",
    "print(g)\n",
    "print(h)\n",
    "print(i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "a2c9188e-8d41-4e3c-948d-272facd3e6dd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "white\n",
      "yellow\n",
      "blue\n"
     ]
    }
   ],
   "source": [
    "p,q,r=\"white\",\"yellow\",\"blue\"#assign three different colors to three different variables\n",
    "print(p)\n",
    "print(q)\n",
    "print(r)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7c46fa08-8e0c-42ef-bef1-7671bdb024ee",
   "metadata": {},
   "source": [
    "variables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "563e1792-da58-4087-8a53-a56cbc77f32e",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid decimal literal (3416279109.py, line 2)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  Cell \u001b[1;32mIn[24], line 2\u001b[1;36m\u001b[0m\n\u001b[1;33m    9color_2=\"Green\"\u001b[0m\n\u001b[1;37m    ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid decimal literal\n"
     ]
    }
   ],
   "source": [
    "color_1=\"Red\"\n",
    "9color_2=\"Green\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "d2fabb9b-884b-43e4-9b24-7db7249c1d31",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "blue\n"
     ]
    }
   ],
   "source": [
    "_color3=\"blue\"\n",
    "print(_color3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "2d7e8f15-c111-4ce5-a489-99543733c08a",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (1943559239.py, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  Cell \u001b[1;32mIn[26], line 1\u001b[1;36m\u001b[0m\n\u001b[1;33m    $color4=\"purpel\"\u001b[0m\n\u001b[1;37m    ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "$color4=\"purpel\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "0cb80ec7-4c5c-4ae9-9d0a-0fdeff5305ac",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax. Maybe you meant '==' or ':=' instead of '='? (1639302163.py, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  Cell \u001b[1;32mIn[27], line 1\u001b[1;36m\u001b[0m\n\u001b[1;33m    @color5=\"yellow\"\u001b[0m\n\u001b[1;37m     ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid syntax. Maybe you meant '==' or ':=' instead of '='?\n"
     ]
    }
   ],
   "source": [
    "@color5=\"yellow\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "ac98082e-0979-4ba6-9ba8-8aea1697986a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Atharva\n",
      "Raj\n",
      "Swaraj\n"
     ]
    }
   ],
   "source": [
    "_Name1=\"Atharva\"\n",
    "_Name2=\"Raj\"\n",
    "_Name3=\"Swaraj\"\n",
    "print(_Name1)\n",
    "print(_Name2)\n",
    "print(_Name3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "22739250-eb5f-4733-820b-9a83b6b2acf7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "01\n",
      "02\n",
      "03\n"
     ]
    }
   ],
   "source": [
    "_a1=\"01\"\n",
    "_b2=\"02\"\n",
    "_c3=\"03\"\n",
    "print(_a1)\n",
    "print(_b2)\n",
    "print(_c3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "9593fa23-123e-4fd9-80af-76f20e335ae4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "8\n",
      "12\n",
      "50\n"
     ]
    }
   ],
   "source": [
    "_text1=\"8\"\n",
    "_text2=\"12\"\n",
    "_text3=\"50\"\n",
    "print(_text1)\n",
    "print(_text2)\n",
    "print(_text3)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "51f2e6b2-6d57-4fa0-9a82-6dcc148ccaa1",
   "metadata": {},
   "source": [
    "_boy1=\"10\"\n",
    "_Girl=\"11\"\n",
    "print(\"_boy1\")\n",
    "print(\"Girl1\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "53f2ef54-c2a3-441b-bcba-c5bd8a547fcc",
   "metadata": {},
   "source": [
    "Python Operators"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "86043636-13a3-46aa-b5f6-8cdab05a6fc8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n"
     ]
    }
   ],
   "source": [
    "x=5\n",
    "y=5\n",
    "print(x==y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "b2678096-ebfd-4ce2-adf1-e5346e22d962",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "15\n"
     ]
    }
   ],
   "source": [
    "print (10+5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "c23778f4-a693-4138-9053-9a2412ed7c8f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "27\n"
     ]
    }
   ],
   "source": [
    "print (15+12)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "a68cc610-2aa8-40ff-aa5c-8ec1d1d36880",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5\n"
     ]
    }
   ],
   "source": [
    "print(15-10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "7f6c05bd-0337-4f3f-8412-1df5028f7c04",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['apple', 'banana', 'cherry']\n"
     ]
    }
   ],
   "source": [
    "thislist = [\"apple\", \"banana\", \"cherry\"]\n",
    "print(thislist)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "acd8c42a-42d2-4881-afd8-f782e401d53b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['cars,bike,man,woman']\n"
     ]
    }
   ],
   "source": [
    "thislist=[\"cars,bike,man,woman\"]\n",
    "print(thislist)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "940c293e-3fb5-4d59-ad40-d3dd3d4f60f2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['shopkeeper,things,grocery']\n"
     ]
    }
   ],
   "source": [
    "thislist=[\"shopkeeper,things,grocery\"]\n",
    "print(thislist)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "3e9063e2-5a74-4efe-a9c8-a94308d329ad",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['papper,book,pencil,pen']\n"
     ]
    }
   ],
   "source": [
    "thislist=[\"papper,book,pencil,pen\"]\n",
    "print(thislist)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "64771090-da75-4fc0-8887-52f327485dc7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['old,older,oldest']\n"
     ]
    }
   ],
   "source": [
    "thislist=[\"old,older,oldest\"]\n",
    "print(thislist)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "e8c1e1fa-5df5-42ba-873d-f0aa42ca853c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter your age: 20\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "20"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "str=int(input(\"enter your age:\"))\n",
    "str"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eec5dc07-2b25-4998-a783-ad0da4f01c22",
   "metadata": {},
   "source": [
    "Types of Operators"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7135c867-bd6b-4370-84b7-9bf27414d758",
   "metadata": {},
   "source": [
    "1. Arthmatic operators"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b06ab638-9d62-4c64-9960-aa00b0e91dbd",
   "metadata": {},
   "outputs": [],
   "source": [
    "a=7\n",
    "b=2\n",
    "print(a+b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "ebc0dc14-32bd-4986-8020-cb83d177935b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "30\n"
     ]
    }
   ],
   "source": [
    "a=10\n",
    "b=20\n",
    "print(a+b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "3b5124ff-2738-4e61-a516-412918ffc03c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter first number: 30\n",
      "enter second number: 20\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "sum: 50\n"
     ]
    }
   ],
   "source": [
    "c= int(input(\"enter first number:\"))\n",
    "d=int(input(\"enter second number:\"))\n",
    "print(\"sum:\",c+d)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "1fbacc97-eed3-4348-9c0f-0d81340d88d8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "25\n"
     ]
    }
   ],
   "source": [
    "number = 5\n",
    "square = number ** 2\n",
    "print(square) "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f5162eca-e405-4b61-aaa7-7c9d5c4ec9f0",
   "metadata": {},
   "source": [
    "Identity Operators"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "2c42e4c6-f676-4ed4-99f4-2611add68e1d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n",
      "True\n"
     ]
    }
   ],
   "source": [
    "a=10\n",
    "b=20\n",
    "c=a\n",
    "print(a is not b)\n",
    "print(a is c)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "ec748727-ffbb-4a23-921c-7643b0056777",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n",
      "True\n"
     ]
    }
   ],
   "source": [
    "d=\"green\"\n",
    "e=\"blue\"\n",
    "f=d\n",
    "print(d is not e)\n",
    "print(d is f)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "47869ca7-6023-45c3-94e8-f699d94f2200",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
